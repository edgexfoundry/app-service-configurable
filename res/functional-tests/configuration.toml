[Writable]
LogLevel = "INFO"

  [Writable.Pipeline]
  UseTargetTypeOfByteArray = false
  ExecutionOrder = "FilterByDeviceName, Transform, SetOutputData"
    [Writable.Pipeline.Functions.FilterByProfileName]
      [Writable.Pipeline.Functions.FilterByProfileName.Parameters]
      ProfileNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByDeviceName]
      [Writable.Pipeline.Functions.FilterByDeviceName.Parameters]
      DeviceNames = "Random-Float-Device,Random-Integer-Device"
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByResourceName]
      [Writable.Pipeline.Functions.FilterByResourceName.Parameters]
      ResourceNames = "RandomValue_Int8, RandomValue_Int64"
      FilterOut = "false"
    [Writable.Pipeline.Functions.AddTags]
      [Writable.Pipeline.Functions.AddTags.Parameters]
      Tags=""
    [Writable.Pipeline.Functions.Transform]
      [Writable.Pipeline.Functions.Transform.Parameters]
      Type = "xml"
    [Writable.Pipeline.Functions.Compress]
      [Writable.Pipeline.Functions.Compress.Parameters]
      Algorithm = "gzip"
    [Writable.Pipeline.Functions.Encrypt]
      [Writable.Pipeline.Functions.Encrypt.Parameters]
      Algorithm = "aes"
      Key = "aquqweoruqwpeoruqwpoeruqwpoierupqoweiurpoqwiuerpqowieurqpowieurpoqiweuroipwqure"
      InitVector = "123456789012345678901234567890"
      SecretPath = ""
      SecretName = ""
    [Writable.Pipeline.Functions.SetOutputData]
      [Writable.Pipeline.Functions.SetOutputData.Parameters]
      ResponseContentType = ""
    [Writable.Pipeline.Functions.PushToCore]
      [Writable.Pipeline.Functions.PushToCore.Parameters]
      DeviceName = ""
      ReadingName = ""
    [Writable.Pipeline.Functions.HTTPExport]
      [Writable.Pipeline.Functions.HTTPExport.Parameters]
      Method = "post"
      Url = "http://"
      MimeType = "" #OPTIONAL - default application/json
    [Writable.Pipeline.Functions.MQTTExport]
      [Writable.Pipeline.Functions.MQTTExport.Parameters]
      BrokerAddress = "tcps://localhost:8883"
      Topic = "mytopic"
      SecretPath = "mqtt"
      ClientId = "myclientid"
      QOS="0"
      AutoReconnect="false"
      Retain="false"
      SkipVerify = "false"
      AuthMode = "none"
      PersistOnError = "false"

[Service]
BootTimeout = "30s"
CheckInterval = "10s"
Host = "localhost"
ServerBindAddr = "" # if blank, uses default Go behavior https://golang.org/pkg/net/#Listen
Port = 48095
Protocol = "http"
ReadMaxLimit = 100
StartupMsg = "Configurable Application Service Started"
Timeout = "5s"

[Registry]
Host = "localhost"
Port = 8500
Type = "consul"

[Clients]
  [Clients.CoreData]
  Protocol = "http"
  Host = "localhost"
  Port = 48080

[Trigger]
Type="http"

