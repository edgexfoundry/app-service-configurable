[Writable]
LogLevel = "INFO"

  [Writable.Pipeline]
  UseTargetTypeOfByteArray = false
  ExecutionOrder = "FilterByDeviceName, Transform, SetResponseData"

  [Writable.Pipeline.Functions]
    [Writable.Pipeline.Functions.FilterByProfileName]
      [Writable.Pipeline.Functions.FilterByProfileName.Parameters]
      ProfileNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByDeviceName]
      [Writable.Pipeline.Functions.FilterByDeviceName.Parameters]
      DeviceNames = "Random-Float-Device,Random-Integer-Device"
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterBySourceName]
      [Writable.Pipeline.Functions.FilterBySourceName.Parameters]
      SourceNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByResourceName]
      [Writable.Pipeline.Functions.FilterByResourceName.Parameters]
      ResourceNames = "RandomValue_Int8, RandomValue_Int64"
      FilterOut = "false"
    [Writable.Pipeline.Functions.AddTags]
      [Writable.Pipeline.Functions.AddTags.Parameters]
      Tags=""
    [Writable.Pipeline.Functions.Transform]
      [Writable.Pipeline.Functions.Transform.Parameters]
      Type = "xml"
    [Writable.Pipeline.Functions.Compress]
      [Writable.Pipeline.Functions.Compress.Parameters]
      Algorithm = "gzip"
    [Writable.Pipeline.Functions.Encrypt]
      [Writable.Pipeline.Functions.Encrypt.Parameters]
      Algorithm = "aes256" # "aes" has been Deprecated. Please use "aes256"
      SecretPath = "aes"
      SecretName = "key"
    [Writable.Pipeline.Functions.SetResponseData]
      [Writable.Pipeline.Functions.SetResponseData.Parameters]
      ResponseContentType = ""
    [Writable.Pipeline.Functions.PushToCore]
      [Writable.Pipeline.Functions.PushToCore.Parameters]
      DeviceName = ""
      ReadingName = ""
    [Writable.Pipeline.Functions.HTTPExport]
      [Writable.Pipeline.Functions.HTTPExport.Parameters]
      Method = "post"
      Url = "http://"
      MimeType = "" #OPTIONAL - default application/json
    [Writable.Pipeline.Functions.MQTTExport]
      [Writable.Pipeline.Functions.MQTTExport.Parameters]
      BrokerAddress = "tcps://localhost:8883"
      Topic = "mytopic"
      SecretPath = "mqtt"
      ClientId = "myclientid"
      QOS="0"
      AutoReconnect="false"
      Retain="false"
      SkipVerify = "false"
      AuthMode = "none"
      PersistOnError = "false"
      KeepAlive = "" # Empty value means use default setting
      ConnectionTimeout = "" # Empty value means use default setting

  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.AES]
    path = "aes"
      [Writable.InsecureSecrets.AES.Secrets]
      key = "217A24432646294A404E635266556A586E3272357538782F413F442A472D4B6150645367566B59703373367639792442264529482B4D6251655468576D5A7134"

  # Reporting metrics requires the "edgex-messagebus" Trigger.
  # Since this profile uses "http" trigger the metrics can not be reported.
  [Writable.Telemetry]
  Interval = "0s" # Disables reporting

[Service]
HealthCheckInterval = "10s"
Host = "localhost"
Port = 59705
ServerBindAddr = "" # if blank, uses default Go behavior https://golang.org/pkg/net/#Listen
StartupMsg = "app-functional-tests Service Started"
MaxResultCount = 0 # Not curently used by App Services.
MaxRequestSize = 0 # Not curently used by App Services.
RequestTimeout = "5s"
  [Service.CORSConfiguration]
  EnableCORS = false
  CORSAllowCredentials = false
  CORSAllowedOrigin = "https://localhost"
  CORSAllowedMethods = "GET, POST, PUT, PATCH, DELETE"
  CORSAllowedHeaders = "Authorization, Accept, Accept-Language, Content-Language, Content-Type, X-Correlation-ID"
  CORSExposeHeaders = "Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified, Pragma, X-Correlation-ID"
  CORSMaxAge = 3600

[Registry]
Host = "localhost"
Port = 8500
Type = "consul"

[Clients]
  # Used for version check on start-up
  [Clients.core-metadata]
  Protocol = "http"
  Host = "localhost"
  Port = 59881

  # Used for Event client which is used by PushToCoreData function
  [Clients.core-data]
  Protocol = "http"
  Host = "localhost"
  Port = 59880

# SecretStore is required when Store and Forward is enabled and running with security
# so Database credentials can be pulled from Vault. Also now require when running with secure Consul
# Note when running in docker from compose file set the following environment variables:
#   - SecretStore_Host: edgex-vault
[SecretStore]
Type = "vault"
Host = "localhost"
Port = 8200
Path = "app-functional-tests/"
Protocol = "http"
RootCaCertPath = ""
ServerName = ""
SecretsFile = ""
DisableScrubSecretsFile = false
TokenFile = "/tmp/edgex/secrets/app-functional-tests/secrets-token.json"
  [SecretStore.Authentication]
  AuthType = "X-Vault-Token"
  [SecretStore.RuntimeTokenProvider]
  Enabled = false
  Protocol = "https"
  Host = "localhost"
  Port = 59841
  TrustDomain = "edgexfoundry.org"
  EndpointSocket = "/tmp/edgex/secrets/spiffe/public/api.sock"
  RequiredSecrets = "redisdb"

[Trigger]
Type="http"
