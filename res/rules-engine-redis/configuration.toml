[Writable]
  LogLevel = "INFO"

  [Writable.Pipeline]
  ExecutionOrder = "SetResponseData"

  [Writable.Pipeline.Functions.SetResponseData]
    [Writable.Pipeline.Functions.SetResponseData.Parameters]
    ResponseContentType = ""
  [Writable.Pipeline.Functions.FilterByProfileName]
    [Writable.Pipeline.Functions.FilterByProfileName.Parameters]
    ProfileNames = ""
    FilterOut = "false"
  [Writable.Pipeline.Functions.FilterByDeviceName]
    [Writable.Pipeline.Functions.FilterByDeviceName.Parameters]
    DeviceNames = ""
    FilterOut = "false"
  [Writable.Pipeline.Functions.FilterBySourceName]
    [Writable.Pipeline.Functions.FilterBySourceName.Parameters]
    SourceNames = ""
    FilterOut = "false"
  [Writable.Pipeline.Functions.FilterByResourceName]
    [Writable.Pipeline.Functions.FilterByResourceName.Parameters]
    ResourceNames = ""
    FilterOut = "false"

  # InsecureSecrets are required for Store and Forward DB access and for authenticated HTTP exports when not using
  # security services, i.e. Vault
  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.DB]
    path = "redisdb"
      [Writable.InsecureSecrets.DB.Secrets]
      username = ""
      Password = ""

[Service]
BootTimeout = "30s"
CheckInterval = "10s"
Host = "localhost"
ServerBindAddr = "" # if blank, uses default Go behavior https://golang.org/pkg/net/#Listen
Port = 50001
Protocol = "http"
ReadMaxLimit = 100
StartupMsg = "AppService-rules-engine using Redis Streams Message Bus has Started"
Timeout = "5s"

[Registry]
Host = "localhost"
Port = 8500
Type = "consul"

# Database is require when Redis is used for secure message bus
# Type is used as the secret name when getting credentials from the Secret Store
[Database]
Type = "redisdb"
Host = "localhost"
Port = 6379
Timeout = "30s"

[Clients]
  [Clients.edgex-core-data]
  Protocol = "http"
  Host = "localhost"
  Port = 48080

# SecretStore is required when Store and Forward is enabled and running with security
# so Database credentials can be pulled from Vault. Also now require when running with secure Consul
# Note when running in docker from compose file set the following environment variables:
#   - SecretStore_Host: edgex-vault
[SecretStore]
Type = 'vault'
Host = 'localhost'
Port = 8200
Path = '/v1/secret/edgex/app-rules-engine-redis/'
Protocol = 'http'
RootCaCertPath = ''
ServerName = ''
TokenFile = '/tmp/edgex/secrets/app-rules-engine-redis/secrets-token.json'
AdditionalRetryAttempts = 10
RetryWaitPeriod = "1s"
  [SecretStore.Authentication]
  AuthType = 'X-Vault-Token'

[Trigger]
Type="edgex-messagebus"
SubscribeTopics="events, edgex/events"
PublishTopic="rules-events"
  [Trigger.EdgexMessageBus]
  Type = "redisstreams"
    [Trigger.EdgexMessageBus.SubscribeHost]
    Host = "localhost"
    Port = 6379
    Protocol = "redis"
    [Trigger.EdgexMessageBus.PublishHost]
    Host = "localhost"
    Port = 6379
    Protocol = "redis"
