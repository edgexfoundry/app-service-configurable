[Writable]
  LogLevel = "INFO"

  [Writable.StoreAndForward]
    Enabled = false
    RetryInterval = "5m"
    MaxRetryCount = 10

  [Writable.Pipeline]
    UseTargetTypeOfByteArray = false
    ExecutionOrder = "FilterByDeviceName, TransformToJSON, HTTPPostJSON, MarkAsPushed"

    [Writable.Pipeline.Functions.TransformToXML]
      [Writable.Pipeline.Functions.TransformToXML.Parameters]
        NoOp = "" # Must have at least one parameter for function to be populated in Consul
    [Writable.Pipeline.Functions.TransformToJSON]
      [Writable.Pipeline.Functions.TransformToJSON.Parameters]
        NoOp = "" # Must have at least one parameter for function to be populated in Consul
    [Writable.Pipeline.Functions.CompressWithGZIP]
      [Writable.Pipeline.Functions.CompressWithGZIP.Parameters]
        NoOp = "" # Must have at least one parameter for function to be populated in Consul
    [Writable.Pipeline.Functions.CompressWithZLIB]
      [Writable.Pipeline.Functions.CompressWithZLIB.Parameters]
        NoOp = "" # Must have at least one parameter for function to be populated in Consul
    [Writable.Pipeline.Functions.MarkAsPushed]
      [Writable.Pipeline.Functions.MarkAsPushed.Parameters]
        NoOp = "" # Must have at least one parameter for function to be populated in Consul
    [Writable.Pipeline.Functions.FilterByDeviceName]
      [Writable.Pipeline.Functions.FilterByDeviceName.Parameters]
        DeviceNames = ""
        FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByValueDescriptor]
      [Writable.Pipeline.Functions.FilterByValueDescriptor.Parameters]
        ValueDescriptors = ""
        FilterOut = "false"
    [Writable.Pipeline.Functions.HTTPPostJSON]
      [Writable.Pipeline.Functions.HTTPPostJSON.Parameters]
        url = "http://"
        persistOnError = "false"
        secretheadername = "" # This is the name used in the HTTP header and also used as the secret key
        secretpath = ""
    [Writable.Pipeline.Functions.HTTPPutJSON]
      [Writable.Pipeline.Functions.HTTPPutJSON.Parameters]
        url = "http://"
        persistOnError = "false"
        secretheadername = "" # This is the name used in the HTTP header and also used as the secret key
        secretpath = ""
    [Writable.Pipeline.Functions.HTTPPostXML]
      [Writable.Pipeline.Functions.HTTPPostXML.Parameters]
        url = "http://"
        persistOnError = "false"
        secretheadername = "" # This is the name used in the HTTP header and also used as the secret key
        secretpath = ""
    [Writable.Pipeline.Functions.AddTags]
      [Writable.Pipeline.Functions.AddTags.Parameters]
        tags=""
# InsecureSecrets are required for Store and Forward DB access and for authenticated HTTP exports when not using
# security services, i.e. Vault
  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.DB]
        path = "redisdb"
        [Writable.InsecureSecrets.DB.Secrets]
            username = ""
            password = ""
    [Writable.InsecureSecrets.http]
        path = "http"
        [Writable.InsecureSecrets.http.Secrets]
            yoursecretheadername = "" # Note the key name and value are your custom values.

[Service]
BootTimeout = "30s"
CheckInterval = "10s"
Host = "localhost"
ServerBindAddr = "" # if blank, uses default Go behavior https://golang.org/pkg/net/#Listen
Port = 50003
Protocol = "http"
ReadMaxLimit = 100
StartupMsg = "AppServiceConfigurable-http-export has Started"
Timeout = "5s"

[Registry]
Host = "localhost"
Port = 8500
Type = "consul"

# Database is require when Store and Forward is enabled
# Note when running in docker from compose file set the following environment variables:
# - Database_Host: edgex-redis
[Database]
Type = "redisdb"
Host = "localhost"
Port = 6379
Timeout = "30s"

# SecretStore is required when Store and Forward is enabled and running with security
# so Database credentials can be pulled from Vault.
# Note when running in docker from compose file set the following environment variables:
#   - SecretStore_Host: edgex-vault
#   - SecretStore_ServerName: edgex-vault
[SecretStore]
  Host = 'localhost'
  Port = 8200
  Path = '/v1/secret/edgex/appservice/'
  Protocol = 'http'
  RootCaCertPath = ''
  ServerName = ''
  TokenFile = '/vault/config/assets/resp-init.json'
  AdditionalRetryAttempts = 10
  RetryWaitPeriod = "1s"

  [SecretStore.Authentication]
  AuthType = 'X-Vault-Token'

[Clients]
  [Clients.CoreData]
  Protocol = "http"
  Host = "localhost"
  Port = 48080

[Binding]
Type="messagebus"
SubscribeTopic="events"

[MessageBus]
Type = "zero"
    [MessageBus.SubscribeHost]
        Host = "localhost"
        Port = 5563
        Protocol = "tcp"
