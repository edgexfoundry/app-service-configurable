[Writable]
  LogLevel = "INFO"

  [Writable.Pipeline]
  ExecutionOrder = "HTTPExport"

  [Writable.Pipeline.Functions]
    [Writable.Pipeline.Functions.FilterByProfileName]
      [Writable.Pipeline.Functions.FilterByProfileName.Parameters]
      ProfileNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByDeviceName]
      [Writable.Pipeline.Functions.FilterByDeviceName.Parameters]
      DeviceNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterBySourceName]
      [Writable.Pipeline.Functions.FilterBySourceName.Parameters]
      SourceNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByResourceName]
      [Writable.Pipeline.Functions.FilterByResourceName.Parameters]
      ResourceNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.Transform]
      [Writable.Pipeline.Functions.Transform.Parameters]
      Type = "json"
    [Writable.Pipeline.Functions.Compress]
      [Writable.Pipeline.Functions.Compress.Parameters]
      Algorithm = "gzip"
    [Writable.Pipeline.Functions.Encrypt]
      [Writable.Pipeline.Functions.Encrypt.Parameters]
      Algorithm = "aes256" # "aes" has been Deprecated. Please use "aes256"
      SecretPath = "aes"
      SecretName = "key"
    [Writable.Pipeline.Functions.Batch]
      [Writable.Pipeline.Functions.Batch.Parameters]
      Mode = "bytimecount" # can be "bycount", "bytime" or "bytimecount"
      BatchThreshold = "30"
      TimeInterval = "60s"
      MergeOnSend = "false"
    [Writable.Pipeline.Functions.AddTags]
      [Writable.Pipeline.Functions.AddTags.Parameters]
      Tags=""
    [Writable.Pipeline.Functions.HTTPExport]
      [Writable.Pipeline.Functions.HTTPExport.Parameters]
      Method = "post"
      MimeType = "application/json"
      # Url can have place holders in the form "{key-name}" that are replaced with matching Context values. Error occurs if no value match place holder(s).
      Url = "https://f095cfcd-a3f6-4885-85ea-7157c6afd17e.mock.pstmn.io" # Postman mock service
      PersistOnError = "false"
      ContinueOnSendError = "false" # For chained multi destination exports, if true continues after send error so next export function executes.
      ReturnInputData = "false"  # For chained multi destination exports if true, passes the input data to next export function.
      HeaderName = "" # Name of the header key to add to the HTTP header
      SecretName = "" # Name of the secret for the header value in the SecretStore
      SecretPath = "" # Path to the secret for the header value in the SecretStore
    # Partial name matching allows multiple instances of same function (configured differently) to be in the function pipeline.
    # This supports chaining export functions to export to multiple destinations. Name must start with name that matches built in function.
    [Writable.Pipeline.Functions.HTTPExport2]
      [Writable.Pipeline.Functions.HTTPExport2.Parameters]
      Method = "post"
      MimeType = "application/json"
      # Url can have place holders in the form "{key-name}" that are replaced with matching Context values. Error occurs if no value match place holder(s).
      Url = "https://3ff26601-1945-41e3-96b8-27cf446df696.mock.pstmn.io" # Postman mock service (different link than above)
      PersistOnError = "false"
      ContinueOnSendError = "false" # For chained multi destination exports, if true continues after send error so next export function executes.
      ReturnInputData = "false"  # For chained multi destination exports if true, passing the input data to next export function
      HeaderName = "" # Name of the header key to add to the HTTP header
      SecretName = "" # Name of the secret for the header value in the SecretStore
      SecretPath = "" # Path to the secret for the header value in the SecretStore

  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.http]
    path = "http"
      [Writable.InsecureSecrets.http.Secrets]
      headervalue = "<put your value here>"
    [Writable.InsecureSecrets.AES]
    path = "aes"
      [Writable.InsecureSecrets.AES.Secrets]
      key = "217A24432646294A404E635266556A586E3272357538782F413F442A472D4B6150645367566B59703373367639792442264529482B4D6251655468576D5A7134"

[Service]
Port = 59704
StartupMsg = "app-http-export has Started"

[MessageBus]
  [MessageBus.Optional]
  # Default MQTT Specific options that need to be here to enable evnironment variable overrides of them
  ClientId ="app-http-export"

# Using default Trigger config from common config