name: edgex-app-service-configurable
base: core20
adopt-info: app-service-config
license: Apache-2.0
summary:   The reference EdgeX App Service Configurable
title: EdgeX App Service Configurable
description: |
  The reference EdgeX app-service-configurable is built using the App
  Functions SDK. This service is provided as an easy way to get started
  with processing data flowing through EdgeX. This service leverages the
  App Functions SDK and provides a way for developers to use configuration
  instead of having to compile standalone services to utilize built in
  functions in the SDK.

  Initially the daemon in the snap is disabled - this allows the configuration
  to be modified and provided to app-service-config in
  "$SNAP_DATA/config/app-service-configurable/res" before starting.

# TODO: add armhf when the project supports this
architectures:
  - build-on: amd64
  - build-on: arm64

grade: stable
confinement: strict

# edinburgh release is epoch 1
# fuji release is epoch 2
# geneva/hanoi releases were epoch 3
# ireland is epoch 4
epoch: 4

slots:
  edgex-secretstore-token:
    interface: content
    content: edgex-secretstore-token
    source:
      write: 
        - $SNAP_DATA/app-http-export
        - $SNAP_DATA/app-mqtt-export
        - $SNAP_DATA/app-external-mqtt-trigger
        - $SNAP_DATA/app-functional-tests
        - $SNAP_DATA/app-push-to-core
        - $SNAP_DATA/app-rules-engine

apps:
  app-service-configurable:
    adapter: full
    command: bin/service-wrapper.sh
    command-chain:
      - bin/startup-env-var.sh
      - bin/security-secret-store-env-var.sh
    daemon: simple
    install-mode: disable
    plugs: [network, network-bind]

plugs:
  app-config:
    interface: content
    target: $SNAP_DATA/config

parts:
  app-service-config:
    source: .
    plugin: make
    build-packages: [gcc, git, libzmq3-dev, pkg-config]
    build-snaps:
      - go/1.17/stable
    stage-packages: [libzmq5]
    override-build: |
      cd $SNAPCRAFT_PART_SRC

      GIT_VERSION=$(git describe --tags --abbrev=0 | sed 's/v//')
      if [ -z "$GIT_VERSION" ]; then
        GIT_VERSION="0.0.0"
      fi
      snapcraftctl set-version ${GIT_VERSION}
      echo $GIT_VERSION > ./VERSION

      make tidy
      make build

      # install the service binary
      install -DT "./app-service-configurable" \
         "$SNAPCRAFT_PART_INSTALL/bin/app-service-configurable"

      # create config dirs
      find ./res -maxdepth 1 -type d -exec install -d "$SNAPCRAFT_PART_INSTALL/config/"{} \;

      # replace relative log paths in configuration.toml files with fully qualified paths
      # prefixed with $SNAP_COMMON
      find ./res -name "configuration.toml" | \
          while read fname; do
               cat "$fname" | sed -e s:\./logs/:\\'$SNAP_COMMON/'\: > \
              "$SNAPCRAFT_PART_INSTALL/config/$fname"
          done

      install -DT "./Attribution.txt" \
         "$SNAPCRAFT_PART_INSTALL/usr/share/doc/app-service-configurable/Attribution.txt"
      install -DT "./LICENSE" \
         "$SNAPCRAFT_PART_INSTALL/usr/share/doc/app-service-configurable/LICENSE"

  config-common:
    plugin: dump
    source: snap/local/runtime-helpers

  hooks:
    source: snap/local/hooks
    plugin: make
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      make build
      install -DT ./cmd/configure/configure "$SNAPCRAFT_PART_INSTALL/snap/hooks/configure"
      install -DT ./cmd/install/install "$SNAPCRAFT_PART_INSTALL/snap/hooks/install"
